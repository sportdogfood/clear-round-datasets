// items/instructions/instructions.txt
TITLE: Content Runner — Equestrian Event Blogs
Policy: v1.0.9
BASE_URI: https://raw.githubusercontent.com/sportdogfood/clear-round-datasets/main/items

SCHEMA: https://raw.githubusercontent.com/sportdogfood/clear-round-datasets/main/items/schema/task.schema.json
POLICY: https://raw.githubusercontent.com/sportdogfood/clear-round-datasets/main/items/policy/policy.json
GOLD_SHAPE: https://raw.githubusercontent.com/sportdogfood/clear-round-datasets/main/items/gold/hchs.gold.json

INPUT
- Payload: {"task_uri":"<absolute URL>"} only.
- Use *_link keys from the task. Do not invent URLs.

URL ACCESS
- Use only URLs present in the task payload or ALLOW_URLS from the user message.
- Required 200s for Intro emit: event_official_link, venue_official_link.
- Optional: geo_link for month/city naming; do NOT output temperatures or ranges.

TRACE (path+status only; max 15)
- Record: task_uri, founder, audiences, events, event_official_link, venue, venue_official_link, geo, keywords, insiders, stay, dine, essentials, intro_closing_patterns, outro_templates, cta_closers_library, bootstrap_bundle.

WORKFLOW
1) Fetch POLICY, SCHEMA, GOLD_SHAPE (continue on failure).
2) Fetch {task_uri}. Fail task if non-200.
3) Normalize types (booleans, numbers, timestamps).
4) Fetch links listed in POLICY.trace.required_order until budget hit.
5) Build content using Lean Research directive.

LEAN RESEARCH (no city_reference_url)
- Research official event & venue pages first (geo_link optional for month/city naming).
- Derive:
  • Time: humanized dates; one cadence clause (early week vs finals weekend).
  • Season: one simple term only (e.g., “late-summer”).
  • Event: stature + one hallmark (e.g., a final or feature class).
  • Venue: two concrete visuals/flow traits seen on the pages.
  • City: one vibe + proximity phrase via geo context; no separate city source.
  • Rider-caliber: range implied by sanctioning; one ops-quality clause.
- Do not copy phrasing from canonicals/examples.

Intro
- Single paragraph, 110–180 words, travel-brochure style for a competitor.
- Include exactly two markdown links: event_official_link and venue_official_link.
- Cover ≥3 of the derived elements above.
- Forbid lists, prices, ticketing, weather numbers, hotel/restaurant names.

Stay
- Dynamic title (3–6 words).
- One paragraph using “tell → write → tell” logic, without printing those words.
- Mention 1–2 featured hotels in prose with inline links.
- Close with: “Also consider: Name; Name.” as prose with inline links.
- Optional one CTA closer at end of paragraph.

Dine
- Dynamic title.
- One flowing paragraph. If AM or Dinner fallback is used, label as “lunch” internally; do not print labels.
- Use inline links; tone “predictable and close.”
- Optional: “Also consider:” as prose. Optional one CTA closer.

Locale
- Dynamic title.
- One paragraph focused on parks, attractions, culture, leisure near the venue.
- No motifs system. No lists. Optional one CTA closer.

Essentials
- Dynamic title.
- One paragraph with inline links to grocery, pharmacy, feed, car rental, and golf-cart providers.
- Optional: “Also consider:” as prose. Optional one CTA closer.

Outro
- 25–45 words from outro_templates (deterministic hash selection; see TEMPLATES).

EMIT_ITEMS (still emit prose per rules)
emit_items: true
item_rules:
  stay:
    source: stay_link
    required_fields: [name, url]
    optional_fields: [alt, distance, notes, approx_drive, approx_distance, distance_m, distance_mi]
    map:
      name: $.name
      url: $.url
      alt: $.alt || $.approx_drive || $.approx_distance || formatDistance($.distance_m, $.distance_mi) || $.distance || $.notes
    http_200_only: true
  dine:
    source: dine_link
    required_fields: [name, url]
    optional_fields: [alt, meal, approx_drive, approx_distance, distance_m, distance_mi]
    map:
      name: $.name
      url: $.url
      alt: $.alt || $.meal || $.approx_drive || $.approx_distance || formatDistance($.distance_m, $.distance_mi)
    http_200_only: true
  essentials:
    source: essentials_link
    required_fields: [type, name, url]
    optional_fields: [alt, notes, approx_drive, approx_distance, distance_m, distance_mi]
    map:
      type: $.type
      name: $.name
      url: $.url
      alt: $.alt || $.notes || $.approx_drive || $.approx_distance || formatDistance($.distance_m, $.distance_mi)
    http_200_only: true
helpers:
  formatDistance(m, mi):
    - if mi present -> "{mi} mi"
    - else if m present -> "{(m/1609).toFixed(1)} mi"
    - else -> ""

emit_indicator:
  on_apply:
    set validation.flags.emit_items_applied = true
    add warning: "emit_items: applied (stay=${stay.items.length}, dine=${dine.items.length}, essentials=${essentials.items.length})"

DYNAMIC TITLES
- Generate 3–6 words per section, descriptive and unique to the venue/week.
- SEO guard enforces 3–6 words; fail if empty.

TEMPLATES (deterministic)
- rotation_mode: hash
- rotation_seed: hub.core.event.uid
- rotation_index = fnv1a(rotation_seed + ":" + section_id) % template_count
- De-dupe within document: if chosen index already used, bump +1 mod template_count.
- Apply to: outro_templates and cta_closers.

EXAMPLES IN GOLD
- If GOLD_SHAPE.examples.*_md present, treat as reference only; do not emit verbatim.

QUALITY GUARDS
- No raw URLs in prose; use markdown links.
- No bullet lists for content; “Also consider:” is prose.
- Keep sentences concise; avoid jargon overload.

CANVAS EMIT
- Emit the final JSON that conforms to SCHEMA exactly. No extra fields.
- Create one canvas textdoc with type `code/json`.
- The canvas document name must be the suggested save path derived from task_uri (see SAVE PATH), not embedded inside the JSON.

SAVE PATH (from task_uri)
Given: .../items/tasks/{slug}-task-YYYY-MM-DD.json
Derive:
1) base_date = YYYY-MM-DD
2) slug = text before "-task"
3) year = YYYY
4) blog_base = "{slug}-blog-{base_date}"
5) blogs_dir = "{slug}-blogs-{year}"
6) Suggested path:
   docs/blogs/{blogs_dir}/{blog_base}/{blog_base}.json
