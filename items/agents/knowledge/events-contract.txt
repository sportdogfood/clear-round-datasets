EVENTS CONTRACT — v3.0 (ET)
Last updated: 2025-09-07

SCOPE
- Defines the canonical event "card" for Clear Round Travel.
- Facts-only (no POV). Inputs are hints; agent confirms against official sources before write.
- Supports hubs (the event) and optional legs (weeks) inside the hub window. No legacy branch dirs.

MUST-LOAD (FULL URLs; fail-closed)
- Manifest: https://crt-b1434e13de34.herokuapp.com/items/agents/manifest.json
- Ingestion rules: https://crt-b1434e13de34.herokuapp.com/items/agents/ingestion-rules.txt
- Event rules (core): https://crt-b1434e13de34.herokuapp.com/items/agents/event-rules.core.json
- Event rules (rich): https://crt-b1434e13de34.herokuapp.com/items/agents/event-rules.json
- Cards core (shared): https://crt-b1434e13de34.herokuapp.com/items/agents/cards-core.txt
- Labels rules: https://crt-b1434e13de34.herokuapp.com/items/agents/labels-rules.json

DIRS & PATHS (from manifest/templates; do not hardcode)
- Write path template: items/events/{organizer_uid}-{event_uid}.json
- Allowed prefix: /items/ (enforced). Events must match regex: ^items/events/[a-z0-9-]+-[a-z0-9-]+\.json$
- No legacy shows/*, annual/series/finals branches, or ad-hoc locations.

UID & FILENAME POLICY
- event_uid = slugify( sanitize_official_name(event_official_name) )
  • Sanitize: drop sponsors/venue/organizer; remove year/rating tokens; collapse spaces; title-case then slug.
- _uid for event cards = event_uid.
- Filename = {organizer_uid}-{event_uid}.json (organizer-fronted; filename != UID).

REQUIRED FIELDS (union of core + relations)
- _uid (== event_uid)
- event_uid
- event_official_name
- event_display_name (copy of official name unless policy dictates otherwise)
- event_official_link (HTTPS)
- event_official_start_date (YYYY-MM-DD)
- venue_uid (must end -venue)
- organizer_uid
- source_uids (array; ≥1; domain slugs)
- created_date (ET, YYYY-MM-DD)
- last_updated (ET, YYYY-MM-DD)

OPTIONAL FIELDS
- event_official_end_date (YYYY-MM-DD)
- event_description
- is_series ("y"|"n"|"auto")
- is_finals ("y"|"n")
- notes, form_uid, git_status
- city_uid, state_uid, country_uid, label_uids[]
- hub_uid, series_index, series_total, public_leg_label, leg_label
- event_leg_uids[] (for legs), yyyymm, event_duration, event_current_status, days_until_start, days_until_end, event_estimated_next_start_date
- month_uids[], year_uid, season_uid, week_uids[], day_uids[]

RELATED_UIDS BLOCK (include for stitching; mirrors relations)
- related_uids: {
    "venue_uid": "…",
    "organizer_uid": "…",
    "event_leg_uids": [ … ],
    "label_uids": [ … ],
    "source_uids": [ … ]
  }

SERIES / HUB / LEGS POLICY
- If is_series = "y":
  • Hub window = min(leg start) → max(leg end). Legs must be non-overlapping and fully inside the hub.
  • Default leg label scheme: "Leg N"; public display avoids "Leg" unless source uses it.
  • leg_uid = hub event_uid + "-" + series_index (1-based), if leg files are emitted.
- If is_series = "auto": infer from official page structure; else leave "n".

SOURCES
- source_uid = domain_slug (e.g., usef.org → usef-org); one per domain.
- sources_checked[] preview payload must include final URL used and is_official flag ("y").

DERIVED (allowed; never overwrite inputs)
- yyyymm from start date; durations; current status vs today (ET); next estimated start if annual; time buckets (months/seasons/years/weeks/days).

VALIDATION (fail-closed)
- official_link_must_be_https=true; must be the official site or federation page (no social).
- relations_must_resolve=true (venue gate, organizer).
- bool_encoding=yn; date_format=YYYY-MM-DD.
- filename must match template; path must start with /items/ and match regex.

DISCREPANCY POLICY (core)
- If hint != official for name/start/end: prefer_official_with_flag; record in preview.discrepancies[].

PREVIEW ENVELOPE (read-only)
{
  "event":"ADD_EVENT_PREVIEW",
  "status":"ok|error",
  "path":"items/events/<organizer_uid>-<event_uid>.json",
  "message":"add: <Display Name> — <YYYY-MM-DD>[ to <YYYY-MM-DD>] (<venue_display_name or venue_uid>)",
  "json": { /* complete event card (fields above) */ },
  "discrepancies":[ {"field":"…","hint":"…","official":"…","resolution":"official_overrode_hint"} ],
  "sources_checked":[ {"url":"<final_url>","source_uid":"<domain-slug>","is_official":"y"} ],
  "load_ledger":[ {"url":"…/boot.json","status":"ok"}, {"url":"…/event-rules.core.json","status":"ok"} ],
  "timestamp":"ISO-8601"
}

COMMIT ENVELOPE (full-drop only)
- JSON: { "path": "https://…/items/events/{organizer_uid}-{event_uid}.json", "message": "add: …", "json": { … } }
- No ops wrappers. No diffs.

FAILURE MODES
- needs_rules | needs_source | needs_review | needs_normalizer | invalid_path | validation_failed

END
