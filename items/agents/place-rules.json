{
  "name": "place-rules",
  "version": "v3.4",
  "table": "places",
  "prefix": "place_",
  "uid_immutable": true,
  "naming": {
    "field_case": "snake_case",
    "uid_charset_regex": "^[a-z0-9]+(?:-[a-z0-9]+)*$",
    "filename_equals_uid": true
  },
  "place_type_policy": {
    "allowed": [
      "hotel",
      "airbnb",
      "rvpark",
      "restaurant",
      "site",
      "park"
    ],
    "required": true
  },
  "base_vars": [
    "place_uid",
    "place_official_name",
    "place_display_name",
    "place_recordId"
  ],
  "uid_rule": "place_uid = slugify(place_official_name)",
  "uid_requires": [
    "place_official_name"
  ],
  "uid_collision_policy": {
    "on_collision_append": "-{city_uid_stem}",
    "city_uid_stem_rule": "use city_uid when present; else state_uid; else country_uid"
  },
  "required_fields": [
    "place_official_link",
    "place_type",
    "place_official_name",
    "place_display_name",
    "city_uid",
    "state_uid",
    "country_uid",
    "source_uids",
    "created_date",
    "last_updated"
  ],
  "optional_fields": [
    "user_input_place_link",
    "user_input_place_name",
    "aka",
    "keywords",
    "label_uids",
    "place_city",
    "place_state",
    "place_description",
    "primary_venue_uid",
    "near_venue_uids",
    "place_address_line1",
    "place_address_line2",
    "place_zip",
    "place_timezone",
    "place_phone",
    "place_email",
    "place_hours_note",
    "place_google_pin",
    "place_geo_lat",
    "place_geo_long",
    "notes",
    "form_uid",
    "git_status",
    "place_name",
    "place_link"
  ],
  "relations": {
    "city_uid": {
      "type": "single",
      "required": true
    },
    "state_uid": {
      "type": "single",
      "required": true
    },
    "country_uid": {
      "type": "single",
      "required": true
    },
    "primary_venue_uid": {
      "type": "single",
      "required": false,
      "must_end_with": "-venue"
    },
    "near_venue_uids": {
      "type": "multi",
      "required": false,
      "must_end_with": "-venue"
    },
    "source_uids": {
      "type": "multi",
      "required": true,
      "min_items": 1
    },
    "label_uids": {
      "type": "multi",
      "required": false
    }
  },
  "normalizers_required": [
    "countries",
    "states",
    "cities",
    "labels"
  ],
  "date_policies": {
    "format": "YYYY-MM-DD",
    "timezone": "America/New_York"
  },
  "source_uid_policy": {
    "construction": "domain_slug",
    "domain_slug_rule": "lowercase primary domain; dotsâ†’hyphens",
    "source_type_hint": "first path token or key (e.g., '/', 'contact', 'about', 'map')",
    "flags": {
      "is_official": "y|n",
      "is_favorite": "y|n"
    }
  },
  "typed_input_aliases": {
    "notes": "Allow operators to use type-prefixed inputs; we map to canonical fields before validation.",
    "hotel": {
      "hotel_link": "user_input_place_link",
      "hotel_name": "user_input_place_name",
      "hotel_city": "city_uid",
      "hotel_state": "state_uid",
      "hotel_country": "country_uid",
      "hotel_address_line1": "place_address_line1",
      "hotel_address_line2": "place_address_line2",
      "hotel_zip": "place_zip",
      "hotel_google_pin": "place_google_pin",
      "hotel_lat": "place_geo_lat",
      "hotel_long": "place_geo_long",
      "hotel_phone": "place_phone",
      "hotel_email": "place_email"
    },
    "restaurant": {
      "restaurant_link": "user_input_place_link",
      "restaurant_name": "user_input_place_name",
      "restaurant_city": "city_uid",
      "restaurant_state": "state_uid",
      "restaurant_country": "country_uid",
      "restaurant_address_line1": "place_address_line1",
      "restaurant_address_line2": "place_address_line2",
      "restaurant_zip": "place_zip",
      "restaurant_google_pin": "place_google_pin",
      "restaurant_lat": "place_geo_lat",
      "restaurant_long": "place_geo_long",
      "restaurant_phone": "place_phone",
      "restaurant_email": "place_email"
    },
    "rvpark": {
      "rvpark_link": "user_input_place_link",
      "rvpark_name": "user_input_place_name",
      "rvpark_city": "city_uid",
      "rvpark_state": "state_uid",
      "rvpark_country": "country_uid",
      "rvpark_address_line1": "place_address_line1",
      "rvpark_address_line2": "place_address_line2",
      "rvpark_zip": "place_zip",
      "rvpark_google_pin": "place_google_pin",
      "rvpark_lat": "place_geo_lat",
      "rvpark_long": "place_geo_long",
      "rvpark_phone": "place_phone",
      "rvpark_email": "place_email"
    },
    "airbnb": {
      "airbnb_link": "user_input_place_link",
      "airbnb_name": "user_input_place_name",
      "airbnb_city": "city_uid",
      "airbnb_state": "state_uid",
      "airbnb_country": "country_uid",
      "airbnb_address_line1": "place_address_line1",
      "airbnb_address_line2": "place_address_line2",
      "airbnb_zip": "place_zip",
      "airbnb_google_pin": "place_google_pin",
      "airbnb_lat": "place_geo_lat",
      "airbnb_long": "place_geo_long",
      "airbnb_phone": "place_phone",
      "airbnb_email": "place_email"
    },
    "site": {
      "site_link": "user_input_place_link",
      "site_name": "user_input_place_name",
      "site_city": "city_uid",
      "site_state": "state_uid",
      "site_country": "country_uid",
      "site_address_line1": "place_address_line1",
      "site_address_line2": "place_address_line2",
      "site_zip": "place_zip",
      "site_google_pin": "place_google_pin",
      "site_lat": "place_geo_lat",
      "site_long": "place_geo_long",
      "site_phone": "place_phone",
      "site_email": "place_email"
    },
    "park": {
      "park_link": "user_input_place_link",
      "park_name": "user_input_place_name",
      "park_city": "city_uid",
      "park_state": "state_uid",
      "park_country": "country_uid",
      "park_address_line1": "place_address_line1",
      "park_address_line2": "place_address_line2",
      "park_zip": "place_zip",
      "park_google_pin": "place_google_pin",
      "park_lat": "place_geo_lat",
      "park_long": "place_geo_long",
      "park_phone": "place_phone",
      "park_email": "place_email"
    }
  },
  "normalize_on_add": {
    "accept_typed_aliases": true,
    "from_inputs": [
      "user_input_place_link",
      "user_input_place_name",
      "place_type",
      "city_uid",
      "state_uid",
      "country_uid",
      "aka"
    ],
    "from_official_pages": {
      "enabled": true,
      "allow_paths": [
        "/",
        "/contact",
        "/about",
        "/visit",
        "/map",
        "/location"
      ],
      "fields": [
        "place_official_name",
        "place_official_link",
        "place_address_line1",
        "place_zip",
        "place_google_pin"
      ],
      "rules": {
        "prefer_same_domain": true,
        "require_https": true,
        "max_redirects": 2
      }
    },
    "computed": {
      "place_official_name": "treat user_input_place_name as a hint; confirm/canonicalize from official pages; fallback to hint if not contradicted",
      "place_official_link": "start from user_input_place_link; follow redirects to final canonical HTTPS on same site when available",
      "place_display_name": "copy of place_official_name",
      "place_uid": "slugify(place_official_name); append city stem on collision",
      "source_uids": "derive from place_official_link domain (domain_slug)",
      "aka": "trim, collapse whitespace, dedupe (case-insensitive)",
      "keywords": "deterministic set from tokens: place_official_name + aka + city_uid + state_uid (hyphen/space normalized), lowercased, deduped; cap 12",
      "place_city": "human-readable city name from city_uid normalizer",
      "place_state": "human-readable state name from state_uid normalizer",
      "created_date": "today (ET)",
      "last_updated": "today (ET)"
    },
    "geo_parse": {
      "enabled": true,
      "from_google_pin": "if place_google_pin URL includes '@lat,long' or 'query=lat,long', extract numeric lat/long",
      "precision": "store as strings; no external geocoding"
    },
    "strictness": {
      "no_third_party_geocode": true,
      "no_phone_email_guessing": true,
      "facts_only": true
    }
  },
  "enrich_on_research": {
    "allowed_facets": [
      "address",
      "contacts",
      "geo",
      "tz",
      "labels",
      "keywords",
      "description"
    ],
    "notes": "research step may refine/append but must not overwrite operator inputs without explicit confirmation"
  },
  "derived": {
    "allow": true,
    "fields": {
      "yyyymm": "optional inspection/verification month when set elsewhere"
    },
    "never_overwrite_inputs": true
  },
  "validation": {
    "official_link_must_be_https": true,
    "relations_must_resolve": true,
    "halt_on_missing_normalizer": true,
    "no_ad_hoc_values": true,
    "bool_encoding": "yn",
    "ignore_prefixes": [
      "dnu_",
      "ignore_"
    ]
  },
  "paths": {
    "save_path_template": "items/index/{place_type_plural}/{place_uid}.json",
    "validation_regex": "^items/index/(hotels|airbnbs|rvparks|restaurants|sites|parks)/[a-z0-9-]+\\.json$",
    "place_type_plural_map": {
      "hotel": "hotels",
      "airbnb": "airbnbs",
      "rvpark": "rvparks",
      "restaurant": "restaurants",
      "site": "sites",
      "park": "parks"
    },
    "sources_input_dir": "items/sources",
    "no_branch_dirs": true
  },
  "related_policy": {
    "include_related_uids": true,
    "fields": [
      "primary_venue_uid",
      "near_venue_uids",
      "label_uids",
      "source_uids"
    ]
  },
  "notes": {
    "hints": "Use user_input_place_link/name strictly as hints. Persist only place_official_* fields.",
    "typed_inputs": "When accept_typed_aliases is true, any provided type-prefixed inputs are mapped to canonical fields before validation.",
    "deprecated": "place_name and place_link are legacy; new writes should set only place_official_*."
  }
}
