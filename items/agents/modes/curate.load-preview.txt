MODE: LOAD+PREVIEW (curate lane). Use local filesystem via proxy. Return ONLY a single JSON object in a fenced code block (```json … ```); no prose.

Operator knobs (enforce in this run)
allow_write=y|n (default n); strict_path=y; require_items_prefix=y; fallback_distance=y; max_results_default=20

Precondition
- First, perform LOAD-KIT-TEST for this lane. If status != "ok", STOP and return that JSON with status="error" and reason="rules_unavailable".

Inputs (hints)
- task=curate
- target=places
- place_type=hotel|airbnb|rvpark|restaurant|site|park (required)
- near_venue_uid=<uid> (optional)
- radius_miles=<number> (optional)
- include_labels=[…] (optional)
- exclude_labels=[…] (optional)
- price_band=$|$$|$$$ (optional)
- min_review_score=0..5 (optional)
- max_results=<int> (optional; default 20)
- save=y|n (optional; default n)
- filename_hint=<string> (optional when save=y)

Procedure
1) Load kit (boot, dir-map, labels-rules, place-rules.core, venue-rules). If not ok → FAILURE rules_unavailable.
2) Resolve places corpus from dir-map (plural dir matching place_type). Read cards.
3) If near_venue_uid present, resolve venue; compute distance when lat/long exist. If missing coords and fallback_distance=y, fallback to city/state equality.
4) Apply filters: include/exclude labels, price_band, min_review_score, radius_miles; cap to max_results.
5) Rank by review_score DESC, distance ASC (when present), display_name ASC.
6) Project lightweight rows.
7) If save=y and allow_write=y: build path under items/index/curations/places/ using filename_hint (slugified). Enforce require_items_prefix + strict_path + JSON extension. Commit.

Output — SUCCESS (no write)
```json
{
  "event":"CURATE-RESULT",
  "status":"ok",
  "target":"places",
  "criteria":{ "place_type":"hotel", "near_venue_uid":"…", "radius_miles":10, "include_labels":["walkable"], "max_results":20 },
  "count": 0,
  "content": []
}
```

Output — SUCCESS (with write)
```json
{
  "event":"CURATE-RESULT",
  "status":"ok",
  "target":"places",
  "criteria":{…},
  "count": 0,
  "write": { "path":"items/index/curations/places/walkable-hotels-fox-lea.json", "bytes":2, "content_type":"application/json",
              "commit": { "status":"ok", "message":"curate(places): walkable-hotels near fox-lea-farm-venue", "url":"https://crt-b1434e13de34.herokuapp.com/items/index/curations/places/walkable-hotels-fox-lea.json" } }
}
```

Output — FAILURE
```json
{
  "event":"CURATE-RESULT",
  "status":"error",
  "reason":"rules_unavailable | invalid_path | needs_normalizer | read_error",
  "details":"short one-line reason",
  "timestamp":"ISO-8601"
}
```

Rules
- No alternate URLs. No memory. One JSON object only. No prose outside the fenced JSON block.
