{
  "name": "venue-rules",
  "version": "v3",
  "table": "venues",
  "prefix": "venue_",
  "uid_immutable": true,

  "naming": {
    "field_case": "snake_case",
    "uid_charset_regex": "^[a-z0-9]+(?:-[a-z0-9]+)*$",
    "filename_equals_uid": true,
    "uid_required_suffix": "-venue"
  },

  "base_vars": [
    "venue_uid",
    "venue_name",
    "venue_display_name",
    "venue_recordId"
  ],

  "uid_rule": "venue_uid = ensure_suffix(slugify(venue_name), '-venue')",
  "uid_requires": ["venue_name"],

  "uid_collision_policy": {
    "on_collision_append": "-{city_uid_stem}",
    "city_uid_stem_rule": "use city_uid when present; else state_uid; else country_uid"
  },

  "required_fields": [
    "venue_link",
    "venue_name",
    "venue_display_name",
    "city_uid",
    "state_uid",
    "country_uid",
    "source_uids",
    "created_date",
    "last_updated"
  ],

  "optional_fields": [
    "aka",
    "keywords",
    "label_uids",
    "venue_address_line1",
    "venue_address_line2",
    "venue_zip",
    "venue_timezone",
    "venue_phone",
    "venue_email",
    "venue_hours_note",
    "venue_google_pin",
    "venue_geo_lat",
    "venue_geo_long",
    "organizer_uids",
    "events_uids",
    "notes",
    "form_uid",
    "git_status"
  ],

  "relations": {
    "city_uid":    { "type": "single", "required": true },
    "state_uid":   { "type": "single", "required": true },
    "country_uid": { "type": "single", "required": true },
    "airport_uids":      { "type": "multi", "required": false },
    "organizer_uids":    { "type": "multi", "required": false },
    "events_uids":       { "type": "multi", "required": false },
    "source_uids":       { "type": "multi", "required": true, "min_items": 1 },
    "label_uids":        { "type": "multi", "required": false }
  },

  "normalizers_required": [
    "countries", "states", "cities", "labels"
  ],

  "date_policies": {
    "format": "YYYY-MM-DD",
    "timezone": "America/New_York"
  },

  "source_uid_policy": {
    "construction": "domain_slug",
    "domain_slug_rule": "lowercase primary domain; dots→hyphens (e.g., oldsalemfarm.net → oldsalemfarm-net)",
    "source_type_hint": "first path token or key (e.g., '/', 'contact', 'reach-us', 'map')",
    "flags": { "is_official": "y|n", "is_favorite": "y|n" }
  },

  "normalize_on_add": {
    "from_inputs": [
      "venue_link",
      "city_uid",
      "state_uid",
      "country_uid",
      "aka"
    ],
    "from_official_pages": {
      "enabled": true,
      "allow_paths": ["/", "/contact", "/reach-us", "/about", "/visit", "/map"],
      "fields": [
        "venue_name",
        "venue_address_line1",
        "venue_zip",
        "venue_google_pin"
      ],
      "rules": {
        "prefer_same_domain": true,
        "require_https": true,
        "max_redirects": 2
      }
    },
    "computed": {
      "venue_name": "if input name provided, treat as hint; confirm/canonicalize from official page when available; fallback to hint if not contradicted",
      "venue_display_name": "copy of venue_name",
      "venue_uid": "ensure '-venue' suffix; append city stem on collision",
      "source_uids": "derive from venue_link domain (domain_slug)",
      "aka": "trim, collapse whitespace, dedupe (case-insensitive)",
      "keywords": "build deterministic set from tokens: venue_name + aka + city_uid + state_uid (hyphen/space normalized), lowercased, deduped; cap 12",
      "created_date": "today (ET)",
      "last_updated": "today (ET)"
    },
    "geo_parse": {
      "enabled": true,
      "from_google_pin": "if venue_google_pin URL includes '@lat,long' or 'query=lat,long', extract numeric lat/long",
      "precision": "store as strings; no external geocoding"
    },
    "strictness": {
      "no_third_party_geocode": true,
      "no_phone_email_guessing": true,
      "facts_only": true
    }
  },

  "enrich_on_research": {
    "allowed_facets": [
      "address",
      "contacts",
      "geo",
      "tz",
      "labels",
      "keywords"
    ],
    "notes": "research step may refine/append but must not overwrite operator inputs without explicit confirmation"
  },

  "derived": {
    "allow": true,
    "fields": {
      "yyyymm": "optional inspection/verification month when set elsewhere"
    },
    "never_overwrite_inputs": true
  },

  "validation": {
    "official_link_must_be_https": true,
    "relations_must_resolve": true,
    "halt_on_missing_normalizer": true,
    "no_ad_hoc_values": true,
    "bool_encoding": "yn",
    "ignore_prefixes": ["dnu_", "ignore_"],
    "uid_must_have_required_suffix": true,
    "filename_must_equal_uid": true
  },

  "paths": {
    "save_path_template": "index/venues/{venue_uid}.json",
    "sources_input_dir": "index/sources"
  },

  "notes": {
    "scope": "This rule is for VENUES only (entities that must end with -venue). Non-venue places use place-rules.json.",
    "labels": "label_uids are curated; do not auto-tag beyond deterministic keywords corpus.",
    "inheritance": "events may inherit city/state/country from venue on refresh if missing (no overwrite)."
  }
}
