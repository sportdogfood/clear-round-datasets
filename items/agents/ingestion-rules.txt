Here’s a clean, ready-to-commit update for **items/agents/ingestion-rules.txt**.

```
INGESTION RULES — v3

Purpose & Scope
- Facts-only ingestion layer for events, event_series, and venues (plus organizers and sources), using items/* normalizers.
- Source of truth: Git. Airtable is staging/cleanup only.
- Every written value must be source-confirmed (via source_uids). Unknowns remain empty and trigger needs_review / needs_source.

Bootstrap & Loading
- Read manifest.json first. Use:
  - proxy_base, git_base
  - paths.event_rules_path, paths.venue_rules_path, paths.ingestion_rules_path
  - dirs.* and items.* directory names
- Fetch rules via proxy_base; if 404/timeout, fall back to git_base.
- Required rules: items/agents/event-rules.json and items/agents/venue-rules.json.
  - If either missing/unreadable → error: needs_rules (stop).

Intake (starter payload; non-authoritative)
- user_input_event_link
- user_input_event_name
- user_input_event_start_date
- is_series
Notes:
- Treat these as hints only. Do not write entities until confirmed by sources.

Field Conventions
- Keys: snake_case.
- UIDs: must match manifest.policy.uid_regex (^[a-z0-9]+(?:-[a-z0-9]+)*$). Collapse repeated hyphens; no leading/trailing hyphen.
- Filename equals UID; UIDs are immutable after publish.
- Boolean-like flags in staging: store as "y"/"n" (strings). Coerce true→"y", false→"n".
- Ignore any field whose name starts with dnu_ or ignore_.
- Dates: ISO YYYY-MM-DD only (manifest.policy.date_format).

Confirmation Gate (must pass before any write)
1) Link → event_official_link: confirm it is the official show/organizer homepage (HTTPS, non-social). Record a source entry.
2) Name → event_official_name + event_display_name: take canonical title from official site, then apply Official Event Name sanitize policy (see Naming/UID).
3) Date → event_official_start_date (and end if present): confirm from official schedule; do not infer. If ambiguous/conflicting → needs_review (stop).

Naming & UID Policy
- Official Event Name sanitize:
  - Strip sponsors/connectors (e.g., “presented by”).
  - Remove ratings/codes: CSI*, CSIO*, USEF, AA, WCHR, etc.
  - Remove punctuation: commas, slashes, quotes, $, collapse spaces.
  - Title Case result.
  - If a week in a family/series: normalize to “<Family> Series Week N”.
- event_uid = slug(sanitized official name), lowercase with hyphens.
  - If is_series="y": parent ends “-series”; children end “-series-<n>”.
- venue_uid must end with manifest.policy.venue_uid_suffix (e.g., “-venue”).
- State/Country UIDs: lowercase codes (e.g., fl, us).

Directories (from manifest)
- Entities (input): events/, event_series/, venues/, organizers/, sources/ (sources_fav/ optional reference).
- Normalizers (reference): items/{days|months|seasons|years|countries|states|cities|weather|airports|labels}.

Relations (resolution required)
- *_uid = single relation; *_uids = array.
- All relations must resolve to existing files (or a known normalizer). If missing → needs_normalizer (stop).
- Location precedence for derived labels: venue → city → state → country.

Sources (minimal, domain-first policy)
- Purpose: provenance only; agent may return just URLs. Records are lightweight.
- Required per source record:
  - source_uid
  - source_link (full URL, HTTPS preferred)
  - (optional) source_name (if known), source_type, source_accessed_date (YYYY-MM-DD)
- Construction:
  - domain_slug = primary domain lowercased with dots→hyphens (e.g., usef.org → usef-org, fei.org → fei-org, hamptonclassic.com → hamptonclassic-com)
  - source_uid = domain_slug + "-src"
  - source_type = first path segment or identifying token (e.g., "/", "events", "search", "ShowGUID")
  - Example mappings:
    - https://www.hamptonclassic.com/ → source_uid: hamptonclassic-com-src, source_type: "/"
    - https://www.usef.org/search/competitions?... → usef-org-src, source_type: "search"
    - https://www.fei.org/events/... → fei-org-src, source_type: "events"
    - https://www.horseshowsonline.com/ShowDetails?ShowGUID=... → horseshowsonline-com-src, source_type: "ShowGUID"
- De-duplication: one source record per domain_slug; attach multiple links by repeating in event.source_uids if needed.
- Favorites/official:
  - Optional flags stored as "y"/"n": is_favorite, is_official.
  - Official event homepage should set is_official="y".
- sources_fav (if present in repo) is treated as a reference catalog; not required.

Events (apply event-rules.json)
Required base fields before write:
- event_uid, event_official_name, event_display_name, event_official_link, event_official_start_date, created_date, last_updated.
Required relations:
- venue_uid (must end “-venue”), organizer_uid.
Optional relations:
- city_uid, state_uid, country_uid, source_uids, label_uids, rating_tag_uid, discipline_tag_uid, event_tag_uids, series_tag_uid (only if is_series="y"), name_tag_uids.
Allowed derived (never overwrite inputs):
- yyyymm, event_duration (when start & end present), event_current_status (vs today), event_estimated_next_start_date (if annual).
Normalizers:
- Derive days/months/seasons/years from confirmed dates.
- Derive location labels via venue → city/state/country.

Series-Events (apply event-rules.json)
- Only create if is_series="y".
- Required fields: series_uid, parent_event_uid, series_sequence (1..N), event_official_start_date, event_official_end_date, created_date, last_updated.
- UID scheme: <family>-series-<n>; parent is <family>-series.
- Inherit from parent: event_official_name, event_display_name, venue_uid, organizer_uid, tags (children may add), label_uids, source_uids.
- Normalizers/time labels resolved from the child’s dates (micro window).

Venues (apply venue-rules.json)
Required base:
- venue_uid (must end “-venue”), venue_name, venue_display_name, venue_link, created_date, last_updated.
Required relations:
- city_uid, state_uid, country_uid.
Optional relations:
- airport_uids (multi), weather_uid, events_uids, organizer_uids, source_uids (min 1 recommended), label_uids.
Geo/timezone:
- Either venue_coords ("lon,lat") or venue_geo_long/venue_geo_lat within valid ranges; timezone must be valid IANA.
- Ephemeral image links disallowed; external CDN ok.

Time & Location Precedence
- Macro (event window) drives: season, month, weather averages.
- Micro (series child window) drives: locale selection, daily weather, time-sensitive details.
- If no series: event window drives both macro and micro.

Validation & Failure Modes
- needs_rules: required rules file missing/unreadable.
- needs_review: official link/name/date not confirmed or conflicting.
- needs_source: required source missing.
- needs_normalizer: referenced UID or normalizer missing.
- venue_uid_suffix: venue_uid missing required suffix (e.g., “-venue”).
- invalid_geo: lat/long/coords out of range or malformed.
- invalid_timezone: timezone not valid IANA.
- no_ad_hoc_values: do not invent values; leave empty and note.
- facts_only: enforced per manifest.policy.facts_only.

Commit Order (happy path)
1) Ensure required normalizers (time + location) exist.
2) Ensure venue and organizer records exist and pass their rules (else needs_normalizer).
3) Write/patch event (parent) to events/{event_uid}.json.
4) If is_series="y": write each child in event_series/{series_uid}.json with parent_event_uid, series_sequence, confirmed child start/end dates.
5) Write/update sources/{source_uid}.json for official and any additional confirmed sources.
6) Apply predefined tags/labels only; update label_uids as union.

Notes
- This layer is facts-only (no commentary, POV, or tone).
- Agent must remain task-locked during add-event flow; cross-task requests are rejected until completion or explicit cancel.
```

If this v3 looks good, I’ll proceed to the next item you choose.
