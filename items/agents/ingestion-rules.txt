INGESTION RULES — v3.7

Purpose & Scope
- Facts-only ingestion for events, venues, organizers, sources, and places; normalized by items/* time & location normalizers.
- Source of truth: Git (served via proxy). Airtable is staging/cleanup only.
- Every written value must be source-confirmed (via source_uids). Unknowns remain empty and trigger needs_review / needs_source.

Preflights (MUST; fail-closed)
A) KIT-LOAD (boot + core)
- Load FULL URLs:
  • boot.json → https://crt-b1434e13de34.herokuapp.com/items/agents/boot.json
  • event-rules.core.json → https://crt-b1434e13de34.herokuapp.com/items/agents/event-rules.core.json
- Require non-empty JSON bodies. Keys present:
  • boot.json → { policy, dirs, (templates OR tasks) }
  • core.json → { name, version, required_fields, paths.save_path_template }
- If manifest.kit.enforce_hash or boot.attestation.enforce_hash is true, compute sha256 of each body and compare to expected hashes (manifest.kit.hashes.* or boot.core_rules.event_rules_core_sha256). On mismatch → status=error, reason=rules_unavailable.

B) MANIFEST (environment)
- Load FULL URL: https://crt-b1434e13de34.herokuapp.com/items/agents/manifest.json
- Use: proxy_base, git_base, fetch.order, paths.*, dirs.*, templates.*, policy.*, enforcement.*
- Honor enforcement.write_allow_prefixes and events_path_regex when present.

C) PATH-RULES (preview proof)
- Before any commit, compose the final path using manifest.templates.event_write_template or core.paths.save_path_template and validate against enforcement.events_path_regex (if present).
- Final path MUST begin with /items/; else → invalid_path (STOP).

Intake (starter payload; NON-AUTHORITATIVE)
- Events: link, name, start, end (optional), is_series ("y"|"n"|"auto"), is_finals (optional), venue_uid (must end -venue), organizer_uid.
- Venues: user_input_venue_link, user_input_venue_name, city_uid, state_uid, country_uid.
- Places: per place-rules (stay/dine/sites/parks families).

Field Conventions
- Keys: snake_case. UIDs: manifest.policy.uid_regex; collapse repeats; no leading/trailing hyphen.
- Filename policy: Events filename != UID → {organizer_uid}-{event_uid}.json; Venues/Places filename == UID.
- Boolean flags: "y"/"n" only. Dates: YYYY-MM-DD (accept YYYY-MM as hint; confirm day before write).
- Ignore any field whose name starts with dnu_ or ignore_.

CONFIRMATION GATE (MUST PASS BEFORE ANY WRITE)
1) SOURCE-CHECK (hints → facts)
   - Treat link/name/start/end as HINTS. GET the official link (HTTPS, non-social), follow ≤2 redirects.
   - Confirm canonical title and dates from the official site (or official PDF). Require ≥ 1 source_uid (domain_slug).
   - Discrepancies with hints: apply event-rules.core discrepancy_policy (default: prefer_official_with_flag) and surface a discrepancies[] block in preview.
   - If ambiguous/conflicting → needs_review (STOP). If no official source → needs_source (STOP).
2) PATH-RULES (path proof)
   - Build path from manifest/templates/core: items/events/{organizer_uid}-{event_uid}.json.
   - Enforce: final path MUST begin with /items/ and match enforcement.events_path_regex when present. Else invalid_path (STOP).
3) RELATIONS
   - *_uid = single relation; *_uids = array. venue_uid must end -venue.
   - All relations must resolve to existing cards/normalizers when enforcement.relations_must_resolve is true. Else needs_normalizer (STOP).

Directories (resolve from manifest; DO NOT hardcode)
- Entities — manifest.dirs.*: events_dir, venues_dir, organizers_dir, sources_dir, stay_dir, dine_dir, sites_dir, parks_dir, etc.
- Normalizers — manifest.dirs.*: days_dir, months_dir, seasons_dir, years_dir, weeks_dir, countries_dir, states_dir, cities_dir, weather_dir, airports_dir, labels_dir, forms_dir.

Sources (domain-first)
- source_uid = domain_slug (lowercase primary domain, dots→hyphens: usef.org→usef-org).
- source_type = first path segment or identifying token ("/", "events", "ShowGUID", etc.).
- Flags: is_official ("y"|"n"), is_favorite ("y"|"n"). One source record per domain_slug.

Events (apply event-rules.json and event-rules.core.json)
- Required BEFORE write (union of core.required_fields and relations.required):
  • event_uid, event_official_name, event_display_name, event_official_link, event_official_start_date,
    created_date, last_updated, venue_uid (-venue), organizer_uid, source_uids (min 1).
- Optional: city_uid, state_uid, country_uid, label_uids, event_official_end_date, event_description, is_series, is_finals, notes.
- Filename pattern: {organizer_uid}-{event_uid}.json; write to {events_dir}/{organizer_uid}-{event_uid}.json.
- Series: if is_series="y", set leg_flag="y" and leg_label="Leg N" per series_policy (when present). Legs must sit inside hub window.
- Derived allowed (never overwrite inputs): yyyymm, event_duration, event_current_status, event_estimated_next_start_date.

Venues (apply venue-rules.json)
- Required: venue_uid (-venue), venue_official_name, venue_display_name, venue_official_link, created_date, last_updated, city_uid, state_uid, country_uid; source_uids (min 1).
- Geo/timezone: numeric lat/long ranges; IANA timezone; no external geocoding (facts-only).

Places (apply place-rules.json)
- Required base per family (stay/dine/sites/parks). Filename == UID. Save under items/index/{family}/{place_uid}.json.

Validation & Failure Modes
- needs_rules (required rules missing/unreadable or kit hash mismatch)
- needs_review (official link/name/date not confirmed or conflicting)
- needs_source (required official source missing)
- needs_normalizer (referenced UID/normalizer missing)
- invalid_geo / invalid_timezone
- invalid_path (final path not under /items or fails regex)
- facts_only (enforced per manifest)

Preview Envelope (read-only; REQUIRED before commit)
- Return exactly:
{
  "event":"ADD_EVENT_PREVIEW|ADD_VENUE_PREVIEW|ADD_PLACE_PREVIEW",
  "status":"ok|error",
  "path":"items/...",
  "message":"…",
  "json": { /* complete card */ },
  "sources_checked":[ {"url":"<final_url>","source_uid":"<domain-slug>","is_official":"y"} ],
  "discrepancies":[ {"field":"…","hint":"…","official":"…","resolution":"official_overrode_hint"} ],
  "load_ledger":[ {"url":"<boot>","status":"ok","sha256":"…","hash_verified":true}, {"url":"<core>","status":"ok","sha256":"…","expected_sha256":"…","hash_verified":true} ],
  "timestamp":"ISO-8601"
}

Commit Envelope (flat only)
- For .json: { "path": "https://…/items/...", "message": "…", "json": { … } }
- For .txt/.md/.html: { "path": "https://…/items/...", "message": "…", "json": "…string body…" }
- No ops wrapper; no partial diffs.

Operational Notes
- Use manifest.fetch.order (proxy→git) with small timeouts + single retry; on persistent failure, STOP and report exact URL.
- No tiers. No alternate directories. No legacy shows/* branches. Path prefix guard must remain /items/.
