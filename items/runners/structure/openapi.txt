openapi: 3.1.0
info:
  title: CRT Proxy
  version: "1.1.0"
servers:
  - url: https://items.clearroundtravel.com
paths:
  /health:
    get:
      operationId: crt_health
      summary: Proxy health
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok: { type: boolean }
                  uptime: { type: number }
  /_manifest.json:
    get:
      operationId: crt_manifest_root
      summary: Generated index of allowed dirs (root)
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  /items/_manifest.json:
    get:
      operationId: crt_manifest_items
      summary: Generated index of allowed dirs (items)
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  /docs/{path}:
    get:
      operationId: crt_docs_get
      summary: Read a file under docs/ via proxy
      parameters:
        - in: path
          name: path
          required: true
          description: |
            Path under docs/, e.g. _healthz.json or blogs/_ping/index.html
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: string
        "4XX":
          description: Client error
        "5XX":
          description: Server error
  /docs/commit:
    post:
      operationId: crt_docs_commit
      summary: Commit a single JSON file under docs/
      description: >-
        Accepts one JSON file path under docs/ and commits its pretty-printed
        content in a single Git commit.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocsCommitRequest'
            examples:
              example:
                value:
                  path: "docs/blogs/manifest.json"
                  message: "chore: update manifest"
                  json: []
      responses:
        "200":
          description: Commit result
          content:
            application/json:
              schema: $ref: '#/components/schemas/CommitResponse'
        "400": description: Bad request
        "5XX": description: Server error
  /items/commit:
    post:
      operationId: crt_items_commit
      summary: Commit a file under items/ (json or text)
      description: >-
        Accepts a path under items/ and a body (JSON object or text). JSON is
        pretty-printed; text normalized to LF with trailing newline.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemsCommitRequest'
            examples:
              jsonExample:
                value:
                  path: "items/geometry/capc-geo.json"
                  message: "feat: add CAPC geo"
                  json: { place_id: "abc", lat: 0, lng: 0 }
              textExample:
                value:
                  path: "items/notes/readme.txt"
                  message: "docs: add notes"
                  json: "Hello\nWorld"
      responses:
        "200":
          description: Commit result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitResponse'
        "400":
          description: Bad request
        "5XX":
          description: Server error
  /docs/commit-bulk:
    post:
      operationId: crt_bulk_commit
      summary: Bulk commit compiled docs/ files
      description: >-
        Accepts compiled files (HTML/XML/JSON) and writes them atomically under
        docs/. Triggers are compiled by the runner, not this endpoint.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilesCommitRequest'
            examples:
              filesMode:
                summary: Commit explicit files
                value:
                  message: "publish: CAPC 2025-10-05"
                  overwrite: true
                  files:
                    - path: "docs/blogs/capc-blogs-2025/capc-blog-2025-10-05/capc-publish-2025-10-05.json"
                      content_type: "application/json"
                      content_base64: "eyAib2siOiB0cnVlIH0="
                    - path: "docs/blogs/capc-blogs-2025/capc-blog-2025-10-05/index.html"
                      content_type: "text/html"
                      content_base64: "PGh0bWw+PC9odG1sPg=="
                    - path: "docs/blogs/index.html"
                      content_type: "text/html"
                      content_base64: "PGgxPkJsb2dzPC9oMT4="
                    - path: "docs/blogs/2025/index.html"
                      content_type: "text/html"
                      content_base64: "PGgxPjIwMjU8L2gxPg=="
                    - path: "docs/blogs/rss.xml"
                      content_type: "application/xml"
                      content_base64: "PHJzcz48L3Jzcz4="
                    - path: "docs/sitemap.xml"
                      content_type: "application/xml"
                      content_base64: "PHVybHNldD48L3VybHNldD4="
                    - path: "docs/blogs/manifest.json"
                      content_type: "application/json"
                      content_base64: "W10="
      responses:
        "200":
          description: Commit result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitResponse'
        "400":
          description: Bad request (validation, fetch failure, etc.)
        "5XX":
          description: Server error
      x-write-guards:
        deny_patterns:
          - "**/*-blog-????-??-??.json"
          - "**/*-blog.json"
        allow_patterns:
          - "**/*-publish-????-??-??.json"
          - "**/*-publish.json"
          - "docs/blogs/index.html"
          - "docs/blogs/[0-9][0-9][0-9][0-9]/index.html"
          - "docs/blogs/**/index.html"
          - "docs/blogs/rss.xml"
          - "docs/sitemap.xml"
          - "docs/blogs/manifest.json"
        on_violation: halt
      x-validate:
        base64_must_decode: true
        reject_zero_byte: true
        on_failure_status: 400
        on_failure_body:
          reason: validation_failed
          include_details: true
        required_paths:
          - path: "docs/blogs/**/{slug}/{publish_slug}.json"
            content_type: "application/json"
            min_bytes: 100
          - path: "docs/blogs/**/{slug}/index.html"
            content_type: "text/html"
            min_bytes: 200
          - path: "docs/blogs/index.html"
            content_type: "text/html"
            min_bytes: 200
          - path: "docs/blogs/[0-9][0-9][0-9][0-9]/index.html"
            content_type: "text/html"
            min_bytes: 200
          - path: "docs/blogs/rss.xml"
            content_type: "application/xml"
            min_bytes: 80
          - path: "docs/sitemap.xml"
            content_type: "application/xml"
            min_bytes: 80
          - path: "docs/blogs/manifest.json"
            content_type: "application/json"
            min_bytes: 50
      x-notes:
        - Templates must read from publish JSON only; never from *-blog-*.json.
        - If the source JSON lives under docs/, treat it as read-only.
components:
  schemas:
    FileItem:
      type: object
      required: [path, content_base64]
      properties:
        path:
          type: string
          description: Must start with docs/
          pattern: "^docs/.+$"
        content_type:
          type: string
          description: text/html, application/xml, or application/json
        content_base64:
          type: string
          description: Base64 of file bytes
    FilesCommitRequest:
      type: object
      required: [files]
      properties:
        message:
          type: string
        overwrite:
          type: boolean
          description: Force-update the ref to the new commit
          default: true
        files:
          type: array
          minItems: 1
          items: $ref: '#/components/schemas/FileItem'
    DocsCommitRequest:
      type: object
      required: [path, json]
      properties:
        path:
          type: string
          description: Path must begin with docs/ and end with .json
          pattern: "^docs/.+\\.json$"
        message:
          type: string
        json:
          description: JSON object or a JSON string
          oneOf:
            - type: object
            - type: string
    ItemsCommitRequest:
      type: object
      required: [path, json]
      properties:
        path:
          type: string
          description: Path must begin with items/
          pattern: "^items/.+$"
        message:
          type: string
        json:
          description: JSON object (pretty-printed) or a text body
          oneOf:
            - type: object
            - type: string
    CommitResponse:
      type: object
      properties:
        ok:
          type: boolean
        commit:
          type: object
          properties:
            sha: { type: string }
            url: { type: string, format: uri }
        committed_paths:
          type: array
          items: { type: string }
