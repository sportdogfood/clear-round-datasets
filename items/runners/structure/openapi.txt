# items/runners/structure/openapi.txt
openapi: 3.1.0
info:
  title: CRT Items & Docs Proxy (Runner-Light)
  version: "1.2.1"
  description: |
    Minimal API used by the CRT Structure Runner and manual ops.

    Lanes:
      - READ (Items):   GET /items/{path}  → triggers, content, events, images
      - READ (Docs):    GET /docs/{path}   → published artifacts, templates
      - WRITE (Docs):   POST /docs/commit-bulk (primary), POST /docs/commit (rare)

    Runner-Light publishes exactly **two** files per post:
      1) docs/blogs/.../<post>/<slug>-publish[[-YYYY-MM-DD]].json
      2) docs/blogs/.../<post>/index.html

servers:
  - url: https://items.clearroundtravel.com

paths:
  /health:
    get:
      operationId: health
      summary: Health check
      responses:
        "200":
          description: OK (plain text)
          content:
            text/plain:
              schema: { type: string, example: "OK" }

  /items/{path}:
    get:
      operationId: items_get
      summary: Read a file from Items (READ lane)
      description: |
        Fetch a file under `items/` (relative path). Use for triggers, content, events, images, etc.
        Examples:
          - triggers/capc-cap-challenge-trigger-2025-10-05.json
          - content/capc-cap-challenge-blog-2025-10-05.json
          - events/capc-cap-challenge-ev.json
          - images/capc-images.json
      parameters:
        - in: path
          name: path
          required: true
          schema: { type: string }
      responses:
        "200":
          description: Raw file contents
          content:
            "*/*":
              schema: { type: string }
        "4XX": { description: Client error }
        "5XX": { description: Server error }

  /docs/{path}:
    get:
      operationId: docs_get
      summary: Read a file from Docs (READ-only)
      description: |
        Fetch a file under `docs/` (relative path) as served on the public blog.
        Useful for verifying publishes and reading templates:
          - blogs/index.html
          - blogs/2025/index.html
          - blogs/templates/blog.index.html.tmpl
          - blogs/capc-blogs-2025/capc-blog-2025-10-05/index.html
          - blogs/capc-blogs-2025/capc-blog-2025-10-05/capc-cap-challenge-publish.json
      parameters:
        - in: path
          name: path
          required: true
          schema: { type: string }
      responses:
        "200":
          description: Raw file contents
          content:
            "*/*":
              schema: { type: string }
        "4XX": { description: Client error }
        "5XX": { description: Server error }

  /docs/commit:
    post:
      operationId: docs_commit
      summary: Create or update a single JSON file under docs/ (rare; prefer bulk)
      description: |
        Writes a single **JSON** file to `docs/` via GitHub Contents API.
        Prefer **/docs/commit-bulk** for standard publishes.
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: "#/components/schemas/DocsCommitRequest" }
            examples:
              singleJson:
                value:
                  path: "docs/blogs/manifest.json"
                  json:
                    - slug: "capc-cap-challenge-blog-2025-10-05"
                      title: "CAPC CAP: Challenge 2025"
                      date: "2025-10-05"
                      year: "2025"
                      path: "/blogs/capc-blogs-2025/capc-blog-2025-10-05/"
                      json: "/blogs/capc-blogs-2025/capc-blog-2025-10-05/capc-cap-challenge-publish.json"
                      venue: "Prince George’s Equestrian Center"
                  message: "seed manifest"
      responses:
        "200":
          description: Commit result
          content:
            application/json:
              schema: { $ref: "#/components/schemas/CommitResponse" }
        "400": { description: Bad request (validation) }
        "5XX": { description: Server/GitHub error }

  /docs/commit-bulk:
    post:
      operationId: docs_bulk_commit
      summary: Bulk commit multiple docs/* files (single Git commit)
      description: |
        Creates one commit containing explicit `docs/*` files.
        Runner-Light should send exactly two files per publish (publish.json + index.html).
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: "#/components/schemas/BulkCommitRequest" }
            examples:
              runnerLightTwoFiles:
                summary: Standard publish (2 files)
                value:
                  message: "publish capc 2025-10-05"
                  overwrite: true
                  files:
                    - path: "docs/blogs/capc-blogs-2025/capc-blog-2025-10-05/capc-cap-challenge-publish.json"
                      content_type: "application/json"
                      content_base64: "ewogICJzZXQiOiAicHVibGlzaCIsIC4uLn0K"
                    - path: "docs/blogs/capc-blogs-2025/capc-blog-2025-10-05/index.html"
                      content_type: "text/html"
                      content_base64: "PCEtLSBIVE1MIC0tPgo8aHRtbD4uLi48L2h0bWw+"
      responses:
        "200":
          description: Commit result
          content:
            application/json:
              schema: { $ref: "#/components/schemas/CommitResponse" }
        "400": { description: Bad request (validation) }
        "5XX": { description: Server/GitHub error }
      x-write-guards:
        deny_patterns:
          - "**/*-blog-????-??-??.json"
          - "**/*-blog.json"
        allow_patterns:
          - "docs/blogs/*-blogs-[0-9][0-9][0[0-9]][0-9]/*/index.html"      # tolerant, but runner sends the exact path
          - "docs/blogs/*-blogs-[0-9][0-9][0-9][0-9]/*/*-publish.json"
          - "docs/blogs/*-blogs-[0-9][0-9][0-9][0-9]/*/*-publish-????-??-??.json"
        on_violation: halt
      x-notes:
        - Runner-Light writes exactly 2 files per publish; global indexes/feeds are scheduled elsewhere.
        - Templates/pages should render from the publish JSON, never from "*-blog*.json".

components:
  schemas:
    FileItem:
      type: object
      required: [path, content_base64]
      properties:
        path:
          type: string
          description: Must begin with `docs/`
          pattern: "^docs/.+$"
        content_type:
          type: string
          description: MIME type of the file
          enum: [text/html, application/json, application/xml]
        content_base64:
          type: string
          description: Base64 of file bytes (no data: prefix)

    BulkCommitRequest:
      type: object
      required: [files]
      properties:
        message:
          type: string
          description: Commit message
        overwrite:
          type: boolean
          description: Force update the ref
          default: true
        files:
          type: array
          minItems: 1
          description: Explicit files to write under docs/
          items: { $ref: "#/components/schemas/FileItem" }

    DocsCommitRequest:
      type: object
      required: [path, json]
      properties:
        path:
          type: string
          description: Must begin with `docs/` and end with `.json`
          pattern: "^docs/.+\\.json$"
        json:
          description: JSON body (object or JSON string)
          oneOf: [{ type: object }, { type: string }]
        message:
          type: string
          description: Commit message

    CommitResponse:
      type: object
      properties:
        ok: { type: boolean, example: true }
        commit:
          type: object
          properties:
            sha: { type: string, example: "abc123..." }
            url: { type: string, format: uri, example: "https://github.com/sportdogfood/clear-round-datasets/commit/abc123" }
        committed_paths:
          type: array
          items: { type: string }
