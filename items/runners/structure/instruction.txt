# items/runners/structure/instruction.txt
# Purpose: Structure Runner builds/updates the static blog under /docs/blogs/.
# It NEVER edits or overwrites the source post body JSON. It emits a separate
# publish JSON (…-publish-…) and points manifest.json to that publish JSON.

TRIGGER (message JSON)
{
  "add_post": "",                 // raw.githubusercontent.com URL of the source post JSON
  "remove_post": "",              // optional alternative mode
  "rebuild_all": true|false,      // optional mode
  "canonical_base": "https://blog.clearroundtravel.com",
  "images_link": "",              // optional per post (desc-images.json)
  "section_link": "",             // optional SEO fallback JSON
  "allow_urls": [""]              // include EVERY fetch target you expect to use
}

NETWORK RULES
- Only HTTPS.
- May fetch ONLY: trigger.add_post, images_link, section_link, and URLs printed in allow_urls.
- Do not fetch any other domains.
- 2 attempts, 5s timeout each.

PATHS & SLUGS
- Storage root: docs/blogs/{venue}-blogs-{year}/{slug}/
- slug format: {venue}-blog-{YYYY-MM-DD} (derive the date from the post JSON filename).
- The source post JSON filename/path is NEVER overwritten or edited.
- Compute publish_slug by replacing "-blog-" with "-publish-".
- Public paths in manifest and links must start with /blogs/… (site-root).

INPUT SHAPES (post JSON)
- Uses *link fields, not *.url. Examples: stay.items[].link, dine.items[].link, essentials.items[].link
- Paragraph fields allow Markdown inline links in text only:
  hello.intro, hello.outro, stay.paragraph, dine.am, dine.dinner, locale.paragraph, essentials.paragraph
- SEO may be present on post.seo. If missing, use section_link JSON (if provided) as fallback.
- Validate external links as http(s) only; reject non-http(s).

IMAGES (desc-images.json)
- Keys: hero_image_link, hero_image_hidden, stay_image_link, stay_image_hidden,
        dine_image_link, dine_image_hidden, essentials_image_link, essentials_image_hidden,
        locale_image_link, locale_image_hidden, card_image_link, card_image_hidden, image_alt_text.
- Rule: If *_hidden==1 → do not render that slot. Else, use *_image_link if present. No global fallback.
- Slots on single post page: hero, stay, dine, essentials, locale.
- card_image_link is only for listings/cards; store in manifest.image (else omit).

MANIFEST (docs/blogs/manifest.json)
- JSON array. Upsert by slug (manifest_upsert_key = "slug").
- REQUIRED fields to set on add_post:
  slug, title, date, year, path, json, venue
- RECOMMENDED fields (populate when data is available):
  month_num, month_name, season, image, city, state, country,
  lat, lng, place_id, timezone, start_date, end_date, event_duration,
  audience_labels, tags, section_link, maps_link
- Title precedence: blog.seo.section_title → blog.seo.open_graph_title → blog.title → slug
- Image: use card_image_link from images_link when provided; else omit (listing will use placeholder)
- path: /blogs/{venue}-blogs-{year}/{slug}/
- json: /blogs/{venue}-blogs-{year}/{slug}/{publish_slug}.json   # IMPORTANT: points to publish JSON
- tags: derive from post if present; otherwise leave [].
- If discipline/rating fields are empty, omit them entirely.

PAGE GENERATION (HTML)
1) Single post (template: items/runners/structure/templates/blog.index.html.tmpl)
   - Emit: docs/blogs/{venue}-blogs-{year}/{slug}/index.html
   - SEO precedence: blog.seo.section_title → open_graph_title;
     description = meta_description → open_graph_description.
   - Canonical: {canonical_base}{manifest.path}
   - Render paragraphs with HTML-escaped text and convert [label](https://…) to safe anchors
     (target=_blank rel=noopener). Reject non-http(s) links.
   - Lists: render from items[].name and items[].link; append “ — {alt}” when alt present.
   - Tags: from manifest entry for this slug.
   - Neighbors: previous/next by date desc from a snapshot of manifest.

2) Listing page (template: items/runners/structure/templates/blogs.index.html.tmpl)
   → docs/blogs/index.html
   - Left column: Home link, Year links (for every year present in manifest),
     Season rollups (Winter/Spring/Summer/Fall) that only show when there are entries.
   - Filters: clicking Year OR Season toggles visibility (hide non-relevant cards; do not remove them).
   - Carousels by season: Section header “{Season} see all >” with horizontal scroll of cards
     (image, title, date, venue/city). Use manifest.image; if missing, use site-root placeholder
     /assets/images/card-placeholder.jpg.
   - “Recent” rail: newest 4 by date.
   - All cards link to manifest.path.

3) Year archive (template: items/runners/structure/templates/year.index.html.tmpl)
   → docs/blogs/{year}/index.html
   - Grid/list of that year’s posts in date desc order.
   - Use card placeholder when no manifest.image.
   - Header shows {year}. Provide “All blogs” + Season chips that filter within the year.

4) RSS (template: items/runners/structure/templates/rss.xml.tmpl)
   → docs/blogs/rss.xml
   - Limit items to defaults.rss_item_limit (20). Newest first.
   - Each item uses manifest.title, link = {canonical_base}{manifest.path}, pubDate = date.

5) Sitemap (template: items/runners/structure/templates/sitemap.xml.tmpl)
   → docs/sitemap.xml
   - Include: /blogs/, /blogs/{year}/ for all years, and each manifest.path.

TEMPLATES
- Use the installed templates at:
  items/runners/structure/templates/blog.index.html.tmpl
  items/runners/structure/templates/blogs.index.html.tmpl
  items/runners/structure/templates/year.index.html.tmpl
  items/runners/structure/templates/rss.xml.tmpl
  items/runners/structure/templates/sitemap.xml.tmpl
- Outputs must be deterministic/idempotent. Do not inline timestamps or wall-clock values.

VALIDATION
- Fetch and parse add_post JSON (200 only).
- If images_link provided, fetch and parse; otherwise act as if all slots hidden.
- If section_link provided, fetch and parse for SEO fallback only when post.seo is missing.
- All emitted internal links must be site-root absolute; external links must be http(s).
- Manifest must remain a valid JSON array.

IDEMPOTENCE & ORDERING
- Sort manifest by date desc for neighbor/linking needs; keep storage as an upsert-by-slug array.
- Neighbors determined from date desc sorted snapshot.
- NEVER mutate or overwrite the source post JSON; publish JSON is the only new JSON written per post.
- Replace files atomically; outputs must be deterministic.

OUTPUTS ON add_post
- docs/blogs/{venue}-blogs-{year}/{slug}/index.html
- docs/blogs/{venue}-blogs-{year}/{slug}/{publish_slug}.json   # built from source post JSON
- docs/blogs/manifest.json (upsert; manifest.json’s `json` points to publish JSON)
- docs/blogs/index.html
- docs/blogs/{year}/index.html
- docs/blogs/rss.xml
- docs/sitemap.xml

OUTPUTS ON remove_post
- Delete docs/blogs/{venue}-blogs-{year}/{slug}/ (folder)
- Update manifest.json (remove entry)
- Rebuild index.html, {year}/index.html (if year now empty, still emit the page with empty state), rss.xml, sitemap.xml

COMMIT (single bulk operation)
- Prepare: files[] = {
    path: "docs/…",
    content_type: "text/html|application/xml|application/json",
    content_base64: "…"
  }
- POST /docs/commit-bulk
  {
    "message": "chore: add_post {slug}",
    "overwrite": true,
    "files": [ … ]
  }
- Always set overwrite=true for blog outputs.

ERROR BEHAVIOR
- If any required fetch fails: do NOT commit; return trace with which URL failed.
- If manifest write would produce invalid JSON: do NOT commit; return trace.
- If required templates are missing: do NOT commit; return trace.

CONSTRAINTS
- Max network: 2 retries, 5s timeout per fetch.
- No non-HTTPS.
- No unlisted domains beyond allow_urls.

DEFAULTS (mirror policy.json)
- canonical_base: https://blog.clearroundtravel.com
- recent_count: 4
- rss_item_limit: 20
- placeholders exist under site root /assets/images/:
  hero-placeholder.jpg, stay-placeholder.jpg, dine-placeholder.jpg, place-placeholder.jpg, card-placeholder.jpg
