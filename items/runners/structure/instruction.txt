# items/runners/structure/instruction.txt
# Version: 2025-10-13.simple-1a
# Purpose: Authoritative instruction set for ClearRound Structure Runner.
# Bootstrap version loaded remotely via:
#   https://raw.githubusercontent.com/sportdogfood/clear-round-datasets/main/items/runners/structure/instruction.txt
# -------------------------------------------------------------------------

PURPOSE
- Accept a single trigger (URL or JSON) and publish one blog post.
- Read source content; NEVER edit *-blog*.json.
- Produce exactly seven (7) output files and push them in one /docs/commit-bulk.

# -------------------------------------------------------------------------
ACCEPTED TRIGGERS
A) One URL (string) pointing to a JSON under:
   https://raw.githubusercontent.com/{owner}/{repo}/{branch}/items/blogs/{anything}.json
   → Fetch it; that JSON is the trigger.
B) One JSON object pasted inline.

# -------------------------------------------------------------------------
REQUIRED FIELDS
- canonical_base : e.g. https://blog.clearroundtravel.com
- event_link     : raw GitHub URL to event JSON
- One of:
    • content_link : raw URL to the post’s *-blog*.json (read-only)
    • docs_path    : path under docs/.../*.json for the SOURCE file; derive raw URL if needed.

OPTIONAL FIELDS
- images_link, section_link, venue_link, geo_link, audiences_link
- blogs_*_path fields (publish, index, rss, sitemap, manifest, etc.)
- commit_message
- start_date, end_date, season, year

# -------------------------------------------------------------------------
RULES OF THE ROAD
- DO NOT write to any *-blog*.json.
- publish.json naming:
    * “-blog-YYYY-MM-DD.json” → “-publish-YYYY-MM-DD.json”
    * otherwise “-blog.json” → “-publish.json”
- Year: prefer explicit `year`; else event.start_date[0:4]; else filename date.
- Images: use as-is; no auto-fallback.
- Titles/SEO:
    * title: seo.section_title → seo.open_graph_title → title → slug
    * description: seo.meta_description → seo.open_graph_description → first paragraph
- **CONTENT COPY RULE:**
    When `content_link` is present, fetch that JSON and copy *all* fields into `publish.json`.
    Do not summarize or drop nested keys. Enrich only with meta, event, and venue info.

# -------------------------------------------------------------------------
TEMPLATES (read-only)
- items/runners/structure/templates/blog.index.html.tmpl
- items/runners/structure/templates/blogs.index.html.tmpl
- items/runners/structure/templates/year.index.html.tmpl
- items/runners/structure/templates/rss.xml.tmpl
- items/runners/structure/templates/sitemap.xml.tmpl

# -------------------------------------------------------------------------
OUTPUTS (ALWAYS SEVEN)
1) PUBLISH JSON              → blogs_publish_path
2) POST PAGE (index.html)    → blogs_publish_index_path
3) BLOGS INDEX               → blogs_index_path
4) YEAR INDEX                → blogs_{year}_index_path
5) RSS                       → blogs_rss_path
6) SITEMAP                   → blogs_sitemap_path
7) MANIFEST (upsert)         → blogs_manifest_path

Manifest entry must include:
- slug, title, date, year, path, json, venue
- json MUST point to the publish JSON (never *-blog*.json)

# -------------------------------------------------------------------------
# MIRROR PROXY (for sandbox-safe GitHub access)
# -------------------------------------------------------------------------

# Apply ONLY to https://raw.githubusercontent.com/, not /items or /docs paths.
# /items/... are read directly; /docs/... are commit destinations.
# This ensures the runner GETs from /items and POSTs to /docs correctly.

# Purpose:
#   - Allow the Structure Runner (CustomGPT or remote environments) to read
#     GitHub-hosted JSON, HTML, or XML files through the ClearRound proxy.
#   - Avoid direct outbound fetches that may fail in restricted sandboxes.
#
# Behavior:
#   - Apply rewrite automatically to content_link, event_link, images_link,
#     section_link, venue_link, geo_link, and audiences_link.
#   - No effect on /docs/... or already-proxied URLs.
# -------------------------------------------------------------------------


# -------------------------------------------------------------------------
FETCH RULES
- HTTPS only.
- Two attempts per fetch; 5 s timeout each.
- If a non-required link fails → WARN (do not abort).
- If content_link fetch fails → FAIL (cannot build publish.json).
# -------------------------------------------------------------------------

# -------------------------------------------------------------------------
# PROXY REWRITE RULE (required for GPT sandbox)
# -------------------------------------------------------------------------
# Purpose:
#   Ensure GPT can fetch GitHub-hosted JSON, HTML, or XML files through
#   the Heroku proxy, since direct calls to raw.githubusercontent.com are blocked.
#
# Behavior:
#   - Applies only to URLs starting with "https://raw.githubusercontent.com/"
#   - Automatically rewrites them to pass through the CRT mirror proxy.
#   - Does NOT affect /items/... or /docs/... paths.
#
REWRITE:
  - match: "^https://raw\\.githubusercontent\\.com/"
    replace: "https://crt-b1434e13de34.herokuapp.com/mirror/github?url=https://raw.githubusercontent.com/"
#
# Example:
#   Input : https://raw.githubusercontent.com/sportdogfood/clear-round-datasets/main/items/blogs/abc.json
#   Output: https://crt-b1434e13de34.herokuapp.com/mirror/github?url=https://raw.githubusercontent.com/sportdogfood/clear-round-datasets/main/items/blogs/abc.json
# -------------------------------------------------------------------------

# -------------------------------------------------------------------------
PREFLIGHT (LIGHT)
- Prepare exactly 7 files.
- Base64-encode all bodies.
- Validate extensions:
    *.json → application/json
    *.xml  → application/xml
    *.html → text/html
- WARN ONLY if decoded size < threshold:
    publish≥100 B, post≥200 B, indexes≥200 B, rss≥80 B, sitemap≥80 B, manifest≥50 B.
- Print table: path | type | decoded_bytes | status(OK/WARN).

# -------------------------------------------------------------------------
COMMIT (SINGLE BULK)
POST /docs/commit-bulk
{
  "message": commit_message or "publish {slug}",
  "overwrite": true,
  "files": [{path, content_type, content_base64} ×7]
}

# -------------------------------------------------------------------------
ERROR BEHAVIOR
Fail only if:
- trigger URL/JSON cannot be fetched or parsed;
- required fields missing;
- any of the seven outputs null/undefined.
Otherwise continue with WARN.

# -------------------------------------------------------------------------
BOOTSTRAP LINKAGE
- This file is the canonical instruction set.
- The runner’s local bootstrap file (instruction-bootstrap.txt) must include:
      LOAD → this URL (two attempts, 5 s timeout).
- If remote fetch fails, runner uses fallback defaults and warns:
      "Remote instruction fetch failed; bootstrap rules applied."

# -------------------------------------------------------------------------
NON-NEGOTIABLES
- Never modify Airtable routes.
- Never exceed seven outputs.
- Never write to *-blog*.json.
- All commits idempotent: identical bytes re-run → no-op.

# -------------------------------------------------------------------------
RUN SUMMARY
- "Trigger: {url or inline} — fetched ✓"
- List of URLs fetched.
- Preflight table (7 rows).
- "Ready to commit /docs/commit-bulk (7 files)."

# -------------------------------------------------------------------------
END OF FILE
