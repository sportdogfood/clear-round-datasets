Purpose: Structure Runner scaffolds blog files. It never edits post body JSON.
Scope: Build/maintain viewer pages, indices, feeds, sitemap, and manifest entries.

TRIGGER CONTRACT (message JSON):
{
  "add_post": "<content JSON URL>",
  "assets_uri": "<assets JSON URL>",
  "canonical_base": "https://blog.clearroundtravel.com",
  "allow_urls": [
    "https://raw.githubusercontent.com/sportdogfood/clear-round-datasets/main/items/events/capc-cap-challenge-ev.json",
    "https://raw.githubusercontent.com/sportdogfood/clear-round-datasets/main/items/venues/capc-venue.json",
    "https://www.pgparks.com"
  ]
}
Notes:
- Use only HTTPS URLs listed in allow_urls plus the two trigger URLs.
- canonical_base defaults to https://blog.clearroundtravel.com when omitted.

PATH INVARIANTS
- Storage: docs/blogs/{venue}-blogs-{year}/{slug}/
- slug = {venue}-blog-{YYYY-MM-DD} (date from filename of content JSON)
- Post files inside slug folder:
  - index.html
  - <verbatim content JSON filename, not renamed>

RATINGS & DISCIPLINE
- If event.rating_uids present: map to sanctioning fields and add human labels to tags.
- If rating_uids missing/empty: omit rating fields entirely.
- Discipline: include only if provided and non-empty in event data; else omit.

ASSETS
- Assets JSON keys like hero/stay/dine/locale/essentials.
- src values must be site-root absolute paths (e.g., /assets/images/â€¦).
- alt must be preserved.

MANIFEST UPSERT
- File: docs/blogs/manifest.json (array)
- Key: slug
- Upsert fields:
  slug, title, date, year, month_num, month_name, season, path, json, image,
  venue, city, state, country, tags[], rating_uids[], rating_labels[],
  sanctioning, fei_level, usef_premier, discipline[]
- title from content.seo.section_title fallback seo.open_graph_title
- image from assets.hero.src if available
- tags include: venue, state, month_uid, season_uid, rating labels, keywords, audience_uids, insider_uids

INTERACTIVES
- Recent: newest 4 by date
- Next/Prev: neighbors around current slug when sorted desc
- Month, Season, Venue reels: filter manifest by derived fields

OUTPUTS ON add_post
1) docs/blogs/{venue}-blogs-{year}/{slug}/index.html (from templates/blog.index.html.tmpl)
2) docs/blogs/manifest.json (upsert)
3) docs/blogs/index.html (from templates/blogs.index.html.tmpl)
4) docs/blogs/{year}/index.html (from templates/year.index.html.tmpl)
5) docs/blogs/rss.xml (from templates/rss.xml.tmpl)
6) docs/sitemap.xml (from templates/sitemap.xml.tmpl)

REBUILD MODES
- remove_post: delete slug folder, remove manifest entry, rebuild listing/year/rss/sitemap
- rebuild_all: rebuild listing/year/rss/sitemap from manifest only

VALIDATION
- HEAD/GET for content and assets URIs must be 200 and JSON parseable
- Secondary fetches restricted to allow_urls
- Manifest must validate against manifest.schema.json

IDEMPOTENCE
- Deterministic content; avoid timestamps in generated files
- Replace files atomically

RETURN PAYLOAD
- JSON with "writes", "deletes", "trace" arrays describing all operations
