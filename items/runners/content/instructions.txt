TITLE: Content Runner — Equestrian Event Blogs
Version: 2025-10-16.v1
BASE_URI: https://items.clearroundtravel.com/items

SCHEMA: https://items.clearroundtravel.com/items/runners/content/task.schema.json
POLICY: https://items.clearroundtravel.com/items/runners/content/policy.json
GOLD_SHAPE: https://items.clearroundtravel.com/items/gold/hchs.gold.json
RUNNER SOP: policy.writer_guides.hello_intro_path (if present)

INPUT
- Invocation payload: {"task_uri":"<absolute URL under items/tasks/>"} only.
- Runner performs a single GET for {task_uri}. All other reads use *_link fields within the task. No raw.githubusercontent.com.
- The task MUST include "output_path" (items/content/{slug}-content-YYYY-MM-DD.json).

URL ACCESS
- Allowed: items/* links found in the task payload.
- Optional externals (event_official_link, venue_official_link, city_profile_link, seasonal_context_link) are DISPLAY-ONLY unless policy.external_fetch.enabled=true.
- If external fetch is enabled later, only those exact hosts are eligible per policy. No crawling.

TRACE (path+status; collapse successes)
Order: task_uri, policy, schema, rules, event, venue, geo, section, audiences, insiders, keywords, stay, dine, essentials, bootstrap_bundle, content_write, content_verify, trigger_write.
Max 18 entries.

WORKFLOW
1) Load POLICY, SCHEMA, generator rules (continue on failure; always trace).
2) GET {task_uri}. Hard-fail if non-200.
3) Normalize types (booleans from "true"/"false", numeric strings to numbers, CSV link fields to arrays).
4) Build allowlist from *_link fields that start with BASE_URI. Enforce items-only for fetches.
5) Fetch required items: event_link, venue_link, geo_link, section_link. Fetch optional libs: audiences, insiders, keywords, templates, ctas, gold. Fetch curated lists: stay, dine, essentials.
6) Compose context and call generator (pure; no I/O). Generator MUST be evidence-driven (facts → microplans → syntax transforms → novelty checks). No canned paragraph templates.
7) Validate output: path regex, min-bytes, OG images http(s), items minima (stay≥2, dine≥3, essentials≥5 if present).
8) Commit ONE file to output_path (application/json) under items/content/.
9) Verify by GET.
10) Park SR trigger JSON under items/triggers/{slug}-trigger-{date}.json. Do not invoke SR.

PRINTING RULES
- Do NOT emit literal labels (“Intro”, “Stay”, “Dine”, “Locale”, “Essentials”, “Outro”).
- Use dynamic 3–6 word section titles.
- Exactly two proper-noun links inside the intro (event + venue) if available.
- No logistics in intro (no directions/parking/tickets/temps).
- Outro has no links.

QUALITY
- Intro 110–180 words; one paragraph; ≥3 evidence beats.
- Transition 40–70 words; one paragraph.
- Zones openers 45–60 words; inline items blended; “Also consider: …” when ≥2 extras exist.
- One spectator tip per zone max; optional CTAs gated by novelty and entropy.
- Local de-dup Jaccard(3/4/5-gram) ≤ 0.65 across sections; paragraph type-token ratio ≥ 0.35.

SAVE PATH
- Use output_path provided in task. Example: items/content/{slug}-content-YYYY-MM-DD.json
- SR trigger is derived automatically: items/triggers/{slug}-trigger-YYYY-MM-DD.json

FAIL-CLOSE
- If validations fail, do not commit. Return errors + trace.
